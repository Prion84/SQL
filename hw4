4.4
'''На Airbnb есть две основные группы пользователей:

Хозяева (хосты, hosts) – сдают жилье
Путешественники (travelers) – снимают
Начнем с анализа характеристик хозяев в таблице listings! 

Пользователи, сдающие квартиры на Airbnb, зарегистрировались в разное время. Кто-то – очень давно, а кто-то совсем недавно. Давайте проверим, в какой месяц и год зарегистрировалось наибольшее количество новых хостов. В качестве ответа введите дату следующего формата: 2010-12

host_id – идентификатор хозяина
host_since – дата регистрации как хост
Note: Сам хост может встретиться в таблице несколько раз, если сдает несколько помещений, поэтому не забудьте оставить уникальные значения host_id. Также обратите внимание на тип данных в host_since, возможно вам пригодится toStartOfMonth() для извлечения части даты и toDateOrNull() для обработки пустых значений.'''
SELECT

toStartOfMonth(toDateOrNull(host_since)) AS Month_,
uniqExact(host_id) as hostid
FROM listings 
GROUP BY Month_
ORDER BY hostid DESC
LIMIT 10

4.5 
'''
Посмотрим на среднюю частоту ответа среди хозяев (f) и суперхозяев (t).

Значения частоты ответа хранятся как строки и включают значок %, который необходимо заменить на пустоту (''). После этого приведите столбец к нужному типу данных с помощью toInt32OrNull() и посчитайте среднюю частоту отклика в разбивке по тому, является ли хост суперхозяином или нет. В качестве ответа укажите наибольшее среднее.

host_response_rate – частота ответа
host_is_superhost – является ли суперхозяином
Важный момент: у каждого host_id есть только одно уникальное значение частоты ответа, а также одна единая отметка суперхозяина. Чтобы посчитать показатели честно, нужно использовать подзапрос и взять уникальные комбинации с помощью DISTINCT.
'''
SELECT 
AVG(toInt32OrNull(replaceAll(host_response_rate, '%', ''))) AS avghost,
host_is_superhost
FROM (
   
    SELECT 
        DISTINCT host_response_rate,
       host_id,
      host_is_superhost
    FROM 
        listings
        ) 
        --as sub


GROUP BY host_is_superhost

LIMIT 10

4.6
'''
Сгруппируйте данные из listings по хозяевам (host_id) и посчитайте, какую цену за ночь в среднем каждый из них устанавливает (у одного хоста может быть несколько объявлений). Идентификаторы сдаваемого жилья объедините в отдельный массив. Таблицу отсортируйте по убыванию средней цены и убыванию host_id (в таком порядке). В качестве ответа укажите первый массив в результирующей таблице, состоящий более чем из двух id. Например:

2343477,6340,32324

host_id – идентификатор хозяина
id – идентификатор жилья
price – цена за ночь в конкретном месте'''

SELECT 
host_id,
groupArray(id),
AVG(toFloat32OrNull(replaceRegexpAll(price,'[$,]',''))) AS avg_price

FROM listings 
GROUP by host_id
ORDER BY avg_price DESC
LIMIT 100

4.7

SELECT 
host_id,
groupArray(id),
MAX(toFloat32OrNull(replaceRegexpAll(price,'[$,]',''))) - MIN(toFloat32OrNull(replaceRegexpAll(price,'[$,]',''))) AS dif_price
FROM listings 
GROUP by host_id
ORDER BY dif_price DESC
LIMIT 100

4.8
'''Теперь сгруппируйте данные по типу жилья и выведите средние значения цены за ночь, размера депозита и цены уборки. Обратите внимание на тип данных, наличие значка $ и запятых в больших суммах. Для какого типа жилья среднее значение залога наибольшее?

room_type – тип сдаваемого жилья 
price – цена за ночь
security_deposit – залог за сохранность имущества
cleaning_fee – плата за уборку'''

SELECT 
room_type,
AVG(toFloat32OrNull(replaceRegexpAll(price,'[$,]','')))  AS AVG_price,
toFloat32OrNull(replaceRegexpAll(security_deposit,'[$,]',''))  AS security_deposit,
toFloat32OrNull(replaceRegexpAll(cleaning_fee,'[$,]',''))  AS cleaning_fee


FROM listings 
GROUP by room_type , security_deposit ,cleaning_fee
ORDER BY security_deposit DESC
LIMIT 100

4.9
'''

Отлично! В каких частях города средняя стоимость за ночь является наиболее низкой? 

Сгруппируйте данные по neighbourhood_cleansed и посчитайте среднюю цену за ночь в каждом районе. В качестве ответа введите название места, где средняя стоимость за ночь ниже всего.

price – цена за ночь
neighbourhood_cleansed – район/округ города
'''
SELECT 
neighbourhood_cleansed,
AVG(toFloat32OrNull(replaceRegexpAll(price,'[$,]','')))  AS AVG_price

FROM listings 
GROUP by neighbourhood_cleansed
ORDER BY AVG_price ASC
LIMIT 100
