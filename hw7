7.1
'''Ваш менее опытный коллега не уверен, что его таблица retail действительно создалась и добавилась в базу данных. Напишите запрос, который создаст таблицу, если она еще не существует (IF NOT EXISTS), со следующими параметрами:

Название: retail
База: test
Столбцы:
- InvoiceNo – идентификатор заказа, строковое значение

- StockCode – идентификатор товара, строковое значение

- Description – описание товара, строковое значение

- Quantity – количество единиц товара, добавленных в корзину (особенность данных – значения могут быть отрицательными, 32 бита)

- InvoiceDate – дата и время создания заказа (транзакции), часовой пояс – 'Europe/London'

- UnitPrice – цена за единицу товара (особенность данных – значения могут быть отрицательными, точность – три знака после точки, 64 бита)

- CustomerID – идентификатор пользователя, целое положительное число, 32 бита.

- Country – страна, строковое значение. 

Движок: MergeTree
Сортировка: InvoiceDate, CustomerID
Hint: Decimal64
'''
CREATE TABLE IF NOT EXISTS test.retail ( 
    InvoiceNo String,
    StockCode String,
    Description String,    
    Quantity Int32,
    UnitPrice Decimal64(3),
    InvoiceDate DateTime('Europe/London'),
    CustomerID UInt32,
    Country String
    ) 

ENGINE = MergeTree
ORDER BY (InvoiceDate, CustomerID)

7.2 
'''В следующих шагах используется default.retail – данные о транзакциях британского интернет-магазина в период с 1 декабря 2010 по 9 декабря 2011, где:

InvoiceNo – номер транзакции
StockCode – код товара
Description – описание товара
Quantity – количество единиц товара, добавленных в заказ
InvoiceDate – дата транзакции
UnitPrice – цена за единицу товара
CustomerID – id клиента
Country – страна, где проживает клиент'''

7.3
'''Для начала посмотрите, в каких странах имеется наибольшее число уникальных пользователей. Постройте барчарт, где:

по оси x – страна
по оси y – число пользователей
В качестве ответа укажите число уникальных пользователей из Великобритании.

Note: запятые в Redash отделяют каждые три знака в числе (тысячные доли, миллионные и так далее). Например, 2,535,966 - это 2535966. В ответ надо писать число без запятых.
'''
SELECT COUNT(DISTINCT CustomerID) AS uniq_users,
       Country      
FROM default.retail
GROUP BY Country

7.4 
''' Следующая задача – посмотреть на динамику изменения числа активных пользователей в месяц в Великобритании, Австралии и Нидерландах. Полученная вами результирующая таблица должна иметь вид: страна - число уникальных пользователей за определённый месяц.

MAU (monthly active users) – число уникальных пользователей за месяц. Активные пользователи – те, кто сделал хотя бы один заказ за выбранный промежуток времени (месяц).
В качестве ответа укажите наименьшее число пользователей за февраль 2011.'''

SELECT Country,
       COUNT(DISTINCT CustomerID) AS uniq_users      
FROM default.retail
WHERE
    toStartOfMonth(InvoiceDate) = '2011-02-01'    
GROUP BY Country
HAVING Country IN ('United Kingdom', 'Australia', 'Netherlands')
ORDER BY uniq_users ASC

7.5
'''4. Как вы могли заметить, график с предыдущего шага получается не очень информативным для 2 из 3 стран. Давайте посмотрим на динамику изменения числа активных пользователей в месяц уже для всех стран, кроме Великобритании.

В каких месяцах число активных пользователей во Франции было больше, чем в Германии?'''

SELECT Country,
       COUNT(DISTINCT CustomerID) AS uniq_users,       
       toStartOfMonth(InvoiceDate) AS month       
FROM default.retail
WHERE Country IN ('France', 'Germany')    
GROUP BY Country, month

Май 2011
Сентябрь 2011
Декабрь 2011

7.6
''' Теперь проанализируем сами заказы. Посчитайте среднюю сумму заказа (AOV – average order value) в каждой из стран.

Обратите внимание, что пользователь может добавить несколько одинаковых товаров в один заказ, и для подсчета суммы каждого заказа можно создать столбец TotalPrice, в котором будет храниться цена, которую пользователь заплатил, например, за три упаковки чая.

|InvoiceNo|	Description	Quantity|	UnitPrice|	TotalPrice|
|_.|_.|_.|_.|_.|
|12345|	12345|	3|	1.2|	3.6|
|12345|	COOKIES|	1|	2.5	|2.5|
Далее для каждого заказа нужно просуммировать полученную колонку, а затем сгруппировать данные по странам и посчитать среднюю сумму заказа в каждой из них.

Визуализируйте результат. Из представленных вариантов ответа выберите страны, входящие в топ-3 по величине средней суммы заказа.

NB! В таблице есть отрицательные значения Quantity, что соответствует отмененным заказам. Их в расчет AOV включать не нужно.'''
SELECT
       Country,      
       AVG(TotalPrice) AS avg_total_price
FROM 
    (SELECT Country,    
            SUM(UnitPrice * Quantity) AS TotalPrice            
FROM default.retail
WHERE Quantity > 0
GROUP BY Country, InvoiceNo)
GROUP BY Country
ORDER BY AVG(TotalPrice) DESC
